############################
## Morisita result for the same sample should be 1, if no clone are shared, result should be 0
############################
## Overlap between sample_1 against himself
!OUTPUT_FILE: overlap_1vs1.vidjil
!LAUNCH: python ../../fuse.py ../data/overlaps/sample_1.vidjil ../data/overlaps/sample_1.vidjil -o overlap_1vs1.vidjil;

$ 1vs1; Various index have been computed: morisita
1:"morisita"
$ 1vs1; Various index have been computed: jaccard
1:"jaccard"

$ 1vs1; values should be to 1.0: morisita
lr: "morisita": [[1.0, 1.0 ]
$ 1vs1; values should be to 1.0: jaccard
lr: "jaccard": [[1.0, 1.0 ]

############################
## Overlap between sample_1 against sample_3; with various top
!OUTPUT_FILE: overlap_1vs3_top4.vidjil
!LAUNCH: python ../../fuse.py ../data/overlaps/sample_1.vidjil ../data/overlaps/sample_3.vidjil -o overlap_1vs3_top4.vidjil -t 4;

$ 1vs3_top4; Morisita should not be 1.0 as all clones are considered for overlap
lr: "morisita": [[1\.0, 0\.8 ]
$ 1vs3_top4; Jaccard should not be 1.0 as all clones are considered for overlap
lr: "jaccard": [[0\.8, 1\.0 ]



############################
## Overlap between sample_1 against sample_2
!OUTPUT_FILE: overlap_1vs2.vidjil
!LAUNCH: python ../../fuse.py ../data/overlaps/sample_1.vidjil ../data/overlaps/sample_2.vidjil -o overlap_1vs2.vidjil;
# Sample2 have exactly half the number of reads than sample1

$ 1vs2; value should be less than 1 
lr: "morisita": [[1.0, 0.8 ]
$ 1vs2; As Jaccard only use boolean value, value should stil be 1.0
lr: "jaccard": [[1.0, 1.0 ]



############################
## Overlap between sample_1 against sample_3
!OUTPUT_FILE: overlap_1vs3.vidjil
!LAUNCH: python ../../fuse.py ../data/overlaps/sample_1.vidjil ../data/overlaps/sample_2.vidjil -o overlap_1vs3.vidjil;



############################
## Overlap between sample_1 against sample_4
!OUTPUT_FILE: overlap_1vs4.vidjil
!LAUNCH: python ../../fuse.py ../data/overlaps/sample_1.vidjil ../data/overlaps/sample_2.vidjil -o overlap_1vs4.vidjil;



############################
## Overlap between sample_3 against sample_4
!OUTPUT_FILE: overlap_3vs4.vidjil
!LAUNCH: python ../../fuse.py ../data/overlaps/sample_3.vidjil ../data/overlaps/sample_4.vidjil -o overlap_3vs4.vidjil;
# sample 3 have clone from 1 to 4
# sample 4 have clone from 5 to 8
# Value should be to 0

$ 3vs4; value should be 0.0: morisita 
lr: "morisita": [[1.0, 0.0 ]
$ 3vs4; value should be 0.0: jaccard 
lr: "jaccard": [[0.0, 1.0 ]


############################
## Overlap between gradient_increase against gradient_decrease
!OUTPUT_FILE: overlap_increase_vs_decrease.vidjil
!LAUNCH: python ../../fuse.py ../data/overlaps/sample_gradient_increase.vidjil ../data/overlaps/sample_gradient_decrease.vidjil -o overlap_increase_vs_decrease.vidjil;
# sample increase have clone from 100 to 1000, by step of 100
# sample decrease have clone from 1000 to 100, by step of 100

$ increase_vs_decrease; value should be 0.0: morisita 
lr: "morisita": [[1.0, 0.0 ]
$ increase_vs_decrease; value should be 0.0: jaccard 
lr: "jaccard": [[1.0, 1.0 ]
